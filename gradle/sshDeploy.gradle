import com.manning.gia.ssh.Scp
import com.manning.gia.ssh.SshExec

apply from: "$rootDir/gradle/downloadWar.gradle"

ext {
    tomcatRemoteDir = '/opt/apache-tomcat-7.0.42'

    userHome = System.properties['user.home']
    vagrantKeyFile = file("$userHome/.vagrant.d/insecure_private_key")
    remoteTmpDir = "$config.server.username@$config.server.hostname:/tmp"
}

configurations {
    jsch
}

dependencies {
    jsch 'org.apache.ant:ant-jsch:1.9.1'
}

task copyWarToServer(type: Scp, dependsOn: fetchToDoWar) {
    classpath = configurations.jsch
    conventionMapping.sourceFile = { configurations.todo.singleFile }
    destination = remoteTmpDir
    keyFile = vagrantKeyFile
    port = config.server.sshPort
}

tasks.withType(SshExec) {
    classpath = configurations.jsch
    host = config.server.hostname
    username = config.server.username
    keyFile = vagrantKeyFile
    port = config.server.sshPort
}

task shutdownTomcat(type: SshExec, dependsOn: copyWarToServer) {
    command = "sudo -u tomcat $tomcatRemoteDir/bin/shutdown.sh"
        
    doFirst {
        logger.quiet "Shutting down remote Tomcat."
    }
}

task deleteTomcatWebappsDir(type: SshExec, dependsOn: shutdownTomcat) {
    command = "sudo -u tomcat rm -rf $tomcatRemoteDir/webapps/todo"
}

task deleteTomcatWorkDir(type: SshExec, dependsOn: shutdownTomcat) {
    command = "sudo -u tomcat rm -rf $tomcatRemoteDir/work"
}

task deleteOldArtifacts(dependsOn: [deleteTomcatWebappsDir, deleteTomcatWorkDir]) {
    doFirst {
        logger.quiet "Deleting old WAR artifacts."
    }
}

task copyWarToWebappsDir(type: SshExec, dependsOn: deleteOldArtifacts) {
    conventionMapping.command = { "sudo -u tomcat cp /tmp/$configurations.todo.singleFile.name $tomcatRemoteDir/webapps/todo.war" }

    doFirst {
        logger.quiet "Deploying WAR file to Tomcat."
    }
}

task startupTomcat(type: SshExec, dependsOn: copyWarToWebappsDir) {
    command = "sudo -u tomcat $tomcatRemoteDir/bin/startup.sh"

    doFirst {
        logger.quiet "Starting up remote Tomcat."
    }
}

task deployWar(dependsOn: startupTomcat)