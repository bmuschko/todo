= A sample To Do web application image:https://travis-ci.org/bmuschko/todo.svg?branch=master["Build Status", link="https://travis-ci.org/bmuschko/todo"]

This project is a simple, MVC-based task management web application written in Java and JavaScript. Its main purpose is to demonstrate implementation approaches for typical project automation requirements with the help of Gradle. The code of this project is featured in the book link:http://www.manning.com/muschko["Gradle in Action"] published by Manning.

*Note:* Due to a bug in Groovy 1.8.9's ConfigSlurper, the application is not buildable with JDK 8 and the checked-in version of the Gradle wrapper. For more
information please see the link:https://discuss.gradle.org/t/gradle-fails-on-jdk8-with-java-lang-classnotfoundexception-java-util-hashmap-entry/2271/1[discussion on the Gradle forum]. If you are using JDK8, you will want to build the code with
a Gradle version >= 2.0. The branch `gradle-2.x` provides a runnable example using Gradle 2.11.


== Applied Gradle features

* Usage of the Gradle Wrapper.
* Support for a multi-project build.
* Deployment to an embedded link:http://www.eclipse.org/jetty/[Jetty] container.
* Implements various testing strategies:
** Unit testing with link:https://code.google.com/p/spock/[Spock].
** Integration testing against an embedded link:http://www.h2database.com/[H2 database].
** Functional testing with link:http://www.gebish.org/[Geb] against local or remote web container in Firefox.
** Smoke testing of a deployed application with link:http://groovy.codehaus.org/modules/http-builder/[HTTPBuilder].
* Generates code coverage metrics with link:http://www.eclemma.org/jacoco/[JaCoCo].
* Integrates with link:http://www.sonarsource.org/[Sonar] for performing code quality analysis.
* Publishing to a Maven repository using the link:http://www.gradle.org/docs/current/userguide/publishing_maven.html[Maven Publishing plugin].
* Implements dynamic project versioning strategy.
* Reading environment-specific configuration at build time using link:http://groovy.codehaus.org/ConfigSlurper/[Groovy's ConfigSlurper].
* Retrieving the deliverable artifact from a Maven repository.
* Deployment of the deliverable artifact to a Tomcat container using SCP/SSH.


== Running the application

You can directly run your application your local machine. There's no need to install a Servlet container. In a terminal window execute the following command from the root level of the project:

*Mac OS X/*nix*

[source]
----
./gradlew :web:jettyRun
----

*Windows*

[source]
----
gradlew.bat :web:jettyRun
----

After a few moments, you will find the following output: `> Building > :web:jettyRun > Running at http://localhost:8080/todo`. Open your browser of choice and navigate to the URL.
hello
